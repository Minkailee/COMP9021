TEST 1 BEGIN
$ echo -e 'land_1.txt
0' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 20.00 centimetres.

TEST 1 END

TEST 2 BEGIN
$ echo -e 'land_1.txt
98' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 118.00 centimetres.

TEST 2 END

TEST 3 BEGIN
$ echo -e 'land_2.txt
1' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 21.07 centimetres.

TEST 3 END

TEST 4 BEGIN
$ echo -e 'land_2.txt
60' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 25.00 centimetres.

TEST 4 END

TEST 5 BEGIN
$ echo -e 'land_3.txt
10' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 4.00 centimetres.

TEST 5 END

TEST 6 BEGIN
$ echo -e 'land_3.txt
198' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 11.04 centimetres.

TEST 6 END

TEST 7 BEGIN
$ echo -e 'land_4.txt
239' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 39.00 centimetres.

TEST 7 END

TEST 8 BEGIN
$ echo -e 'land_5.txt
783' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 159.00 centimetres.

TEST 8 END

TEST 9 BEGIN
$ echo -e 'land_6.txt
4189' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 264.89 centimetres.

TEST 9 END

TEST 10 BEGIN
$ echo -e 'land_7.txt
550' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 2.49 centimetres.

TEST 10 END

TEST 11 BEGIN
$ echo -e 'land_8.txt
2349' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 176.69 centimetres.

TEST 11 END

TEST 12 BEGIN
$ echo -e 'land_9.txt
3489' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 1.37 centimetres.

TEST 12 END

TEST 13 BEGIN
$ echo -e 'land_9.txt
34820445' | python3 rain.py
Which data file do you want to use? How many decilitres of water do you want to pour down? The water rises to 186.15 centimetres.

TEST 13 END

TEST 14 BEGIN
$ echo coast_1.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 100.

TEST 14 END

TEST 15 BEGIN
$ echo coast_2.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 100.

TEST 15 END

TEST 16 BEGIN
$ echo coast_3.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 87.

TEST 16 END

TEST 17 BEGIN
$ echo coast_4.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 94.

TEST 17 END

TEST 18 BEGIN
$ echo coast_5.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 23.

TEST 18 END

TEST 19 BEGIN
$ echo coast_6.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 82.

TEST 19 END

TEST 20 BEGIN
$ echo coast_7.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 353.

TEST 20 END

TEST 21 BEGIN
$ echo coast_8.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 9.

TEST 21 END

TEST 22 BEGIN
$ echo coast_9.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 10470.

TEST 22 END

TEST 23 BEGIN
$ echo coast_10.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 97720.

TEST 23 END

TEST 24 BEGIN
$ echo coast_11.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 920.

TEST 24 END

TEST 25 BEGIN
$ echo coast_12.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 9236.

TEST 25 END

TEST 26 BEGIN
$ echo coast_13.txt | python3 fish.py
Which data file do you want to use? The maximum quantity of fish that each town can have is 97715232.

TEST 26 END

TEST 27 BEGIN
$ echo triangle_1.txt | python3 triangle.py
Which data file do you want to use? The largest sum is: 7
The number of paths yielding this sum is: 1
The leftmost path yielding this sum is: [7]

TEST 27 END

TEST 28 BEGIN
$ echo triangle_2.txt | python3 triangle.py
Which data file do you want to use? The largest sum is: 55
The number of paths yielding this sum is: 1
The leftmost path yielding this sum is: [8, 3, 17, 15, 12]

TEST 28 END

TEST 29 BEGIN
$ echo triangle_3.txt | python3 triangle.py
Which data file do you want to use? The largest sum is: 260
The number of paths yielding this sum is: 1
The leftmost path yielding this sum is: [18, 38, 2, 36, 28, 32, 39, 35, 32]

TEST 29 END

TEST 30 BEGIN
$ echo triangle_4.txt | python3 triangle.py
Which data file do you want to use? The largest sum is: 989
The number of paths yielding this sum is: 1
The leftmost path yielding this sum is: [48, 42, 58, 29, 47, 74, 50, 28, 30, 48, 62, 75, 77, 41, 40, 66, 58, 39, 77]

TEST 30 END

TEST 31 BEGIN
$ echo triangle_5.txt | python3 triangle.py
Which data file do you want to use? The largest sum is: 4555
The number of paths yielding this sum is: 1
The leftmost path yielding this sum is: [88, 118, 95, 107, 87, 46, 98, 79, 75, 101, 92, 90, 71, 112, 116, 107, 97, 111, 101, 69, 117, 98, 92, 107, 62, 96, 79, 109, 114, 38, 100, 42, 119, 53, 79, 96, 118, 100, 81, 113, 117, 119, 56, 101, 106, 92, 81, 102, 108]

TEST 31 END

TEST 32 BEGIN
$ echo triangle_6.txt | python3 triangle.py
Which data file do you want to use? The largest sum is: 15200
The number of paths yielding this sum is: 1
The leftmost path yielding this sum is: [158, 72, 161, 193, 174, 174, 193, 86, 183, 168, 27, 158, 198, 191, 185, 144, 131, 84, 161, 189, 152, 196, 134, 174, 162, 147, 104, 198, 176, 108, 142, 188, 167, 184, 135, 83, 190, 177, 193, 155, 179, 111, 175, 87, 134, 169, 120, 193, 192, 94, 54, 178, 129, 136, 198, 197, 150, 146, 58, 159, 160, 175, 94, 154, 159, 160, 187, 183, 187, 168, 150, 101, 171, 168, 157, 197, 171, 171, 120, 178, 120, 186, 147, 153, 129, 161, 80, 183, 159, 197, 118, 168, 179, 191, 159, 194, 117, 103, 191]

TEST 32 END

TEST 33 BEGIN
$ echo triangle_7.txt | python3 triangle.py
Which data file do you want to use? The largest sum is: 88
The number of paths yielding this sum is: 11943936
The leftmost path yielding this sum is: [1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]

TEST 33 END

TEST 34 BEGIN
$ echo triangle_8.txt | python3 triangle.py
Which data file do you want to use? The largest sum is: 477597
The number of paths yielding this sum is: 1
The leftmost path yielding this sum is: [135, 643, 587, 688, 591, 440, 391, 404, 696, 688, 575, 634, 322, 529, 629, 268, 698, 599, 459, 633, 414, 640, 798, 792, 544, 769, 397, 784, 707, 300, 571, 734, 444, 557, 670, 506, 305, 745, 780, 628, 543, 239, 591, 775, 554, 744, 756, 645, 570, 571, 446, 610, 347, 556, 187, 700, 399, 759, 764, 761, 633, 698, 212, 500, 794, 413, 554, 770, 684, 722, 797, 646, 797, 713, 258, 695, 706, 576, 778, 587, 679, 709, 218, 674, 330, 630, 725, 419, 649, 631, 475, 786, 789, 727, 144, 771, 642, 613, 590, 228, 592, 550, 710, 761, 724, 235, 615, 755, 670, 769, 772, 501, 597, 798, 792, 743, 689, 337, 615, 497, 756, 692, 565, 615, 497, 526, 687, 679, 657, 622, 798, 746, 741, 589, 764, 476, 661, 792, 640, 797, 591, 459, 308, 741, 186, 385, 705, 494, 295, 736, 683, 636, 259, 786, 777, 698, 769, 777, 389, 558, 493, 406, 681, 273, 660, 500, 689, 435, 721, 510, 701, 473, 618, 716, 524, 562, 405, 724, 393, 638, 620, 625, 789, 537, 561, 513, 606, 761, 785, 665, 295, 608, 636, 362, 553, 565, 742, 699, 519, 772, 620, 522, 448, 572, 555, 582, 763, 442, 698, 612, 763, 792, 391, 343, 671, 747, 674, 591, 711, 762, 676, 771, 755, 587, 418, 667, 252, 544, 724, 715, 396, 692, 751, 574, 762, 164, 672, 768, 345, 782, 788, 749, 736, 639, 773, 465, 765, 731, 501, 717, 754, 566, 339, 780, 775, 574, 541, 748, 331, 616, 569, 577, 725, 701, 769, 757, 797, 764, 630, 538, 527, 731, 686, 656, 638, 607, 789, 423, 513, 752, 658, 662, 109, 786, 438, 698, 456, 545, 519, 447, 745, 760, 501, 502, 436, 654, 607, 292, 645, 399, 748, 778, 653, 691, 358, 775, 781, 476, 374, 646, 524, 429, 753, 588, 673, 596, 382, 635, 608, 642, 212, 656, 622, 582, 606, 563, 768, 787, 20, 622, 634, 559, 595, 391, 667, 660, 716, 762, 740, 766, 311, 624, 380, 494, 408, 603, 502, 154, 381, 723, 677, 655, 637, 772, 760, 773, 617, 786, 797, 566, 782, 464, 336, 398, 426, 308, 586, 693, 80, 308, 792, 530, 671, 525, 472, 454, 779, 504, 641, 552, 703, 743, 495, 768, 666, 767, 648, 358, 709, 528, 721, 667, 546, 729, 679, 752, 649, 747, 724, 430, 611, 611, 440, 290, 679, 712, 723, 586, 459, 684, 754, 743, 750, 643, 99, 701, 729, 714, 519, 664, 262, 778, 429, 112, 787, 617, 663, 752, 676, 454, 590, 649, 466, 766, 559, 715, 788, 756, 582, 671, 756, 610, 774, 381, 469, 551, 205, 562, 757, 506, 719, 346, 659, 511, 678, 546, 573, 638, 691, 396, 730, 544, 712, 385, 355, 686, 369, 768, 640, 59, 684, 737, 665, 778, 349, 582, 504, 616, 773, 788, 580, 629, 324, 640, 721, 277, 707, 599, 302, 694, 528, 333, 756, 556, 646, 199, 645, 793, 688, 138, 795, 797, 744, 754, 385, 632, 743, 796, 679, 647, 788, 531, 724, 377, 256, 743, 390, 728, 739, 684, 611, 670, 753, 558, 217, 642, 577, 623, 653, 745, 689, 681, 567, 633, 694, 39, 782, 516, 792, 588, 485, 771, 70, 644, 721, 454, 704, 495, 475, 754, 702, 504, 411, 698, 455, 714, 686, 617, 732, 323, 498, 694, 794, 564, 330, 361, 506, 212, 680, 728, 634, 774, 630, 518, 716, 621, 715, 776, 656, 326, 680, 761, 444, 752, 742, 419, 612, 540, 573, 749, 602, 511, 790, 525, 786, 784, 421, 704, 718, 729, 485, 315, 750, 634, 762, 221, 735, 431, 723, 690, 733, 601, 791, 646, 144, 706, 789, 657, 782, 560, 706, 330, 753, 578, 794, 444, 741, 597, 680, 553, 333, 500, 782, 768, 740, 316, 621, 469, 600, 629, 335, 564, 678, 740, 454, 718, 638, 443, 703, 635, 482, 772, 658, 798, 795, 139, 792, 608, 189, 735, 784, 378, 679, 592, 736, 668, 721, 658, 606, 334, 289, 282, 83, 695, 688, 718, 799, 376, 677, 649, 460, 620, 761, 783, 750, 188, 556, 499, 503, 177, 550, 761, 735, 637, 253, 645, 739, 246, 793, 695, 629, 694, 594, 452, 759, 642, 206, 580, 488, 376, 629, 788, 652, 765, 388, 641, 673, 537, 620, 764, 628, 440, 649, 798, 762, 370, 675, 772, 428, 503, 705, 405, 480, 266, 752, 710, 678, 793, 537, 677, 719, 379, 732, 791, 651, 208, 752, 786, 421, 643, 568, 729, 371, 690, 659, 619, 577, 721, 749, 763, 618, 712, 184, 793, 743, 758, 751, 516, 40, 485, 715, 735, 773, 749, 485, 756, 629, 440, 658, 461, 725, 675, 685, 306, 797, 772, 789, 579, 731, 774, 699, 639, 257, 678, 652, 726, 737, 650, 702]

TEST 34 END

TEST 35 BEGIN
$ echo triangle_9.txt | python3 triangle.py
Which data file do you want to use? The largest sum is: 2575
The number of paths yielding this sum is: 781129653493432320
The leftmost path yielding this sum is: [2, 1, 3, 3, 2, 2, 4, 3, 3, 1, 4, 3, 4, 3, 4, 4, 3, 4, 4, 4, 4, 4, 1, 4, 4, 4, 4, 4, 4, 2, 2, 3, 2, 4, 2, 4, 3, 1, 4, 3, 2, 2, 3, 2, 4, 4, 3, 4, 2, 4, 2, 2, 4, 4, 0, 4, 4, 3, 2, 2, 4, 4, 4, 4, 4, 3, 3, 2, 4, 4, 3, 4, 4, 4, 4, 3, 4, 4, 2, 4, 4, 4, 4, 3, 3, 4, 3, 4, 4, 3, 2, 1, 3, 0, 4, 3, 4, 2, 3, 4, 4, 2, 4, 1, 4, 4, 3, 4, 4, 2, 1, 4, 4, 2, 4, 3, 3, 2, 4, 3, 2, 3, 4, 2, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 4, 2, 1, 3, 4, 4, 4, 4, 2, 3, 3, 4, 3, 4, 4, 3, 4, 2, 4, 2, 2, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 1, 2, 3, 4, 4, 4, 1, 4, 4, 4, 4, 3, 1, 4, 4, 4, 0, 4, 4, 4, 2, 4, 4, 4, 2, 4, 3, 3, 3, 4, 4, 3, 3, 4, 4, 3, 4, 4, 3, 1, 4, 4, 3, 4, 4, 3, 4, 4, 3, 2, 4, 4, 4, 4, 4, 4, 2, 2, 3, 2, 4, 1, 4, 3, 4, 3, 4, 4, 4, 4, 2, 3, 4, 3, 4, 4, 2, 2, 2, 4, 1, 4, 3, 4, 2, 2, 4, 4, 3, 4, 4, 2, 3, 3, 3, 3, 3, 1, 2, 4, 4, 2, 4, 3, 4, 1, 4, 4, 4, 4, 2, 3, 4, 1, 4, 4, 3, 1, 4, 1, 4, 2, 2, 4, 4, 4, 4, 4, 3, 1, 3, 3, 3, 4, 4, 4, 4, 2, 2, 3, 2, 4, 4, 2, 4, 4, 4, 3, 3, 4, 4, 4, 3, 3, 3, 1, 3, 4, 4, 3, 4, 4, 3, 3, 4, 3, 4, 4, 4, 4, 4, 4, 3, 4, 2, 4, 4, 3, 2, 3, 3, 4, 4, 1, 4, 3, 0, 4, 4, 4, 3, 4, 2, 3, 4, 3, 3, 4, 3, 1, 2, 4, 4, 4, 3, 4, 3, 1, 1, 2, 4, 4, 4, 1, 4, 4, 4, 3, 3, 3, 4, 3, 3, 3, 4, 4, 1, 4, 4, 4, 4, 4, 2, 3, 4, 4, 3, 3, 2, 3, 4, 3, 4, 4, 0, 2, 3, 3, 2, 4, 3, 4, 4, 3, 3, 4, 4, 4, 4, 3, 3, 3, 4, 3, 4, 4, 1, 4, 4, 3, 3, 3, 4, 4, 2, 3, 4, 4, 2, 3, 0, 4, 4, 4, 4, 3, 2, 3, 4, 4, 4, 1, 4, 4, 4, 4, 3, 4, 4, 3, 4, 3, 4, 4, 3, 1, 4, 2, 4, 4, 2, 4, 3, 4, 3, 4, 4, 4, 4, 2, 3, 4, 4, 4, 2, 4, 3, 3, 4, 4, 1, 4, 3, 4, 2, 3, 4, 3, 3, 3, 2, 3, 4, 2, 3, 2, 4, 4, 4, 4, 3, 3, 4, 3, 2, 4, 1, 4, 3, 3, 4, 1, 2, 3, 2, 4, 1, 2, 4, 3, 4, 4, 4, 4, 4, 3, 1, 3, 4, 4, 4, 0, 2, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 2, 2, 3, 3, 3, 2, 4, 4, 4, 3, 3, 4, 1, 2, 3, 3, 3, 4, 4, 1, 2, 4, 4, 2, 4, 2, 3, 4, 4, 4, 4, 4, 2, 4, 4, 4, 4, 3, 2, 3, 3, 4, 3, 3, 4, 2, 4, 2, 1, 4, 4, 1, 4, 2, 3, 3, 4, 3, 3, 3, 4, 3, 3, 4, 3, 4, 4, 3, 4, 4, 4, 2, 4, 4, 4, 1, 4, 4, 4, 0, 3, 4, 4, 3, 4, 4, 4, 4, 4, 4, 2, 4, 4, 4, 0, 2, 3, 3, 3, 4, 4, 4, 3, 4, 3, 4, 2, 4, 4, 4, 1, 4, 2, 4, 3, 4, 4, 3, 4, 1, 2, 4, 3, 4, 4, 1, 4, 4, 3, 3, 2, 4, 2, 4, 4, 3, 3, 3, 3, 4, 4, 3, 4, 3, 2, 2, 4, 3, 4, 4, 3, 4, 3, 3, 4, 4, 4, 1, 3, 4, 4, 4, 3, 4, 4, 2, 2, 4, 3, 2, 4, 3, 3, 3, 3, 2, 4, 4, 2, 2, 3, 4, 2, 4, 4, 4, 3, 4, 4, 1, 3, 4, 3, 3, 3, 2, 4, 4, 4, 4, 4, 4, 2, 4, 4, 3, 4, 4, 4, 3, 2, 3, 4, 3, 4, 3, 2, 4, 4, 3, 4, 3, 3, 4, 4, 3, 4, 1, 4, 2, 4, 2, 4, 4, 2, 4, 4, 0, 3, 3, 4]

TEST 35 END

TEST 36 BEGIN
$ echo partial_order_1.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(1,2)

TEST 36 END

TEST 37 BEGIN
$ echo partial_order_2.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(1,2)
R(2,3)

TEST 37 END

TEST 38 BEGIN
$ echo partial_order_3.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(4,5)
R(3,4)
R(1,2)
R(6,7)
R(2,3)
R(5,6)

TEST 38 END

TEST 39 BEGIN
$ echo partial_order_4.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(0,1)
R(4,5)
R(5,6)
R(3,4)
R(1,2)
R(2,3)

TEST 39 END

TEST 40 BEGIN
$ echo partial_order_5.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(8,9)
R(5,7)
R(1,6)
R(7,9)
R(6,7)
R(3,4)
R(4,6)
R(0,2)
R(4,10)
R(3,5)
R(0,3)
R(1,10)

TEST 40 END

TEST 41 BEGIN
$ echo partial_order_6.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(16,18)
R(13,15)
R(12,15)
R(8,9)
R(11,15)
R(1,18)
R(6,16)
R(8,15)
R(0,13)
R(9,20)
R(7,15)
R(15,17)
R(6,9)
R(5,9)
R(5,12)
R(6,17)
R(0,4)
R(15,20)
R(18,20)

TEST 41 END

TEST 42 BEGIN
$ echo partial_order_7.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(19,20)
R(11,12)
R(9,12)
R(10,13)
R(18,19)
R(13,14)
R(16,17)
R(17,18)
R(4,5)
R(0,5)
R(0,2)
R(14,15)
R(5,6)
R(7,18)
R(6,8)
R(15,16)
R(1,3)
R(4,7)
R(8,12)
R(1,2)
R(8,10)
R(2,6)
R(3,4)
R(1,9)
R(12,13)

TEST 42 END

TEST 43 BEGIN
$ echo partial_order_8.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(6,24)
R(11,13)
R(2,22)
R(0,22)
R(21,23)
R(3,21)
R(1,25)
R(15,27)
R(15,16)
R(23,24)
R(28,29)
R(20,25)
R(29,30)
R(12,26)
R(25,26)
R(6,12)
R(26,28)
R(2,10)
R(22,24)
R(1,22)
R(10,19)
R(4,12)
R(24,26)
R(17,28)

TEST 43 END

TEST 44 BEGIN
$ echo partial_order_9.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(48,51)
R(43,58)
R(2,51)
R(16,43)
R(56,57)
R(35,55)
R(13,33)
R(20,40)
R(14,37)
R(40,49)
R(13,37)
R(50,59)
R(21,60)
R(18,30)
R(27,33)
R(18,26)
R(52,57)
R(24,30)
R(31,60)
R(33,58)
R(51,53)
R(54,57)
R(30,55)
R(9,50)
R(46,52)
R(45,55)
R(8,51)
R(36,41)
R(58,60)
R(21,39)
R(11,46)
R(12,60)
R(26,56)
R(45,50)
R(9,21)
R(8,13)
R(2,60)
R(3,6)
R(58,59)

TEST 44 END

TEST 45 BEGIN
$ echo partial_order_10.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(7,8)
R(18,20)
R(3,11)
R(16,19)
R(4,6)
R(12,14)
R(1,3)
R(8,13)
R(10,13)
R(11,12)
R(12,15)
R(7,11)
R(9,12)
R(13,14)
R(17,18)
R(3,9)
R(5,16)
R(13,19)
R(10,15)
R(19,20)
R(2,10)
R(0,6)
R(15,16)
R(6,7)
R(1,2)
R(13,17)
R(16,17)

TEST 45 END

TEST 46 BEGIN
$ echo partial_order_11.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(1,4)
R(4,13)
R(2,6)
R(14,15)
R(11,12)
R(10,11)
R(2,5)
R(13,14)
R(0,2)
R(9,10)
R(12,14)
R(7,9)
R(11,13)
R(0,3)
R(0,1)
R(2,4)
R(3,11)
R(5,7)
R(7,8)
R(8,10)
R(6,7)
R(4,12)
R(1,6)

TEST 46 END

TEST 47 BEGIN
$ echo partial_order_12.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(1,4)
R(11,14)
R(1,9)
R(6,9)
R(7,11)
R(4,13)
R(9,10)
R(6,7)
R(1,3)
R(15,16)
R(17,18)
R(18,19)
R(8,11)
R(16,17)
R(19,20)
R(6,13)
R(8,9)
R(5,10)
R(14,15)
R(3,5)
R(12,13)
R(4,5)
R(2,3)
R(7,10)
R(3,7)
R(0,8)
R(3,12)
R(0,2)
R(13,15)
R(10,14)
R(5,11)

TEST 47 END

TEST 48 BEGIN
$ echo partial_order_13.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(32,35)
R(1,19)
R(10,35)
R(36,37)
R(22,31)
R(26,38)
R(32,37)
R(37,38)
R(13,31)
R(24,29)
R(29,38)
R(38,39)
R(8,22)
R(16,18)
R(39,40)
R(0,5)
R(20,24)
R(27,37)
R(2,3)
R(9,14)
R(4,18)
R(21,24)
R(32,33)
R(0,14)
R(11,16)
R(19,22)
R(12,17)
R(33,38)
R(5,31)
R(17,26)
R(9,26)
R(15,23)
R(6,35)
R(24,33)
R(9,30)
R(20,31)
R(13,15)
R(14,27)
R(3,36)
R(15,30)
R(12,23)
R(18,23)
R(23,28)
R(31,37)
R(11,34)
R(9,34)
R(17,24)
R(16,32)
R(27,33)
R(17,31)
R(20,35)
R(16,29)
R(34,37)
R(21,32)
R(14,35)
R(22,30)
R(23,27)
R(8,14)
R(8,16)
R(22,26)
R(24,34)
R(25,31)
R(7,38)
R(15,29)
R(28,38)

TEST 48 END

TEST 49 BEGIN
$ echo partial_order_14.txt | python3 nonredundant.py
Which data file do you want to use? The nonredundant facts are:
R(12,13)
R(13,14)
R(7,8)
R(11,12)
R(14,15)
R(3,4)
R(4,5)
R(0,1)
R(10,11)
R(1,2)
R(6,7)
R(5,6)
R(9,10)
R(8,9)
R(2,3)

TEST 49 END

